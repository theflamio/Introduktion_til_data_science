---
title: "Exercise - some linear models"
author: "Søren Højsgaard"
format: html
editor: visual
---

We will use the `palmerpenguins` data set. It is a data set with information on penguins. We will use the `body_mass_g` as the response variable and `species`, `island`, `sex`, `culmen_length_mm`, `culmen_depth_mm`, `flipper_length_mm`, and `year` as explanatory variables.

```{r}
dat <- palmerpenguins::penguins
dat <- dat[complete.cases(dat),]

# 1. Preview the dataset
head(dat)
summary(dat)

# 2. Check for missing values
print("Check total missing values per column") 
colSums(is.na(dat))

# 3. Check data types
#str(dat)

# 4. Handle outliers
# Identify outliers by visualizing (e.g., using boxplots)
boxplot(dat$bill_length_mm, main = "Bill Length")
boxplot(dat$bill_depth_mm, main = "Bill depth")
boxplot(dat$flipper_length_mm, main = "Flipper length")
boxplot(dat$body_mass_g, main = "body mass g")


```

We ask the following question:

1.  How well can we predict the body mass of a penguin based on species and flipper length?

2.  Are predictions improved by including other variables?

We encourage you to take as much inspiration from the lecture slides/notes as you feel like :)

```{r}
library(ggplot2) 
library(broom)
```

```{r}

#First look at the data in a scatter plot.

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=species)) +
  geom_point()

print(" Linear model with flipper_length_mm")

mm1 <- lm(body_mass_g ~ flipper_length_mm, data=dat)

summary(mm1)

names(mm1)

mm1 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm1)))

# Now to answeer the question "How well can we predict the body mass of a penguin based on species and flipper length?"

# Answer the T value is 32.56 on flipper_length and p value is way below 0.5 this is having a great impact 
```

```{r}

# Now we add species

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=species)) +
  geom_point()

print(" Linear model with flipper_length_mm and species")

mm2 <- lm(body_mass_g ~ flipper_length_mm + species, data=dat)

summary(mm2)

mm2 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm2)))
```

```{r}

# Now we remove species and use bill_depth

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=species)) +
  geom_point()

print(" Linear model with flipper_length_mm and bill_depth")

mm3 <- lm(body_mass_g ~ flipper_length_mm + bill_depth_mm, data=dat)

summary(mm3)

mm3 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm3)))
```

```{r}
# Now we remove species and use bill_depth as interaction

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=species)) +
  geom_point()

print(" Linear model with flipper_length_mm and bill_depth")

mm4 <- lm(body_mass_g ~ flipper_length_mm * bill_depth_mm, data=dat)

summary(mm4)

mm4 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm4)))

#Dose not look very good
```

```{r}
# Now we remove bill_length

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=species)) +
  geom_point()

print(" Linear model with flipper_length_mm and bill_length_mm")

mm5 <- lm(body_mass_g ~ flipper_length_mm + bill_length_mm, data=dat)

summary(mm5)

mm5 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm5)))
```

```{r}
# Now we use bill_depth and sex

scatterplot <- dat |> ggplot(aes(x=flipper_length_mm, y=body_mass_g, color=sex)) +
  geom_point()

print(" Linear model with flipper_length_mm and bill_depth")

mm6 <- lm(body_mass_g ~ flipper_length_mm + sex, data=dat)

summary(mm6)

mm6 |> tidy()

scatterplot + geom_line(aes(y=fitted(mm6)))
```

```{r}

# Model fits

# A summary of how well the models fit the data is given by the residual standard deviation. And by the coefficient of determination R2 which is the squared correlation between the observed and fitted values.

# cor(y, ˆy)2

mm1 |> glance()
mm2 |> glance()
mm3 |> glance()
mm4 |> glance()
mm5 |> glance()
mm6 |> glance()

# For Linear Models (lm):

# r.squared: R-squared, the proportion of the variance in the dependent variable     explained by the model.

# adj.r.squared: Adjusted R-squared, a version of R-squared that has been adjusted   for the number of predictors in the model.

# sigma: Residual standard error (the estimated standard deviation of the residuals).

# statistic: The F-statistic of the model (used to test the overall significance of   the model).

# p.value: The p-value corresponding to the F-statistic.

# df: Degrees of freedom of the model.

# logLik: The log-likelihood of the model (useful for comparing models).

# AIC: Akaike Information Criterion (AIC), a metric for model comparison (lower is   better).

# BIC: Bayesian Information Criterion (BIC), another metric for model comparison (lower is better).

# deviance: Residual deviance (the measure of model fit for generalized models).

# df.residual: Degrees of freedom of the residuals (number of observations minus     number of parameters).

# For Generalized Linear Models (glm):
# In addition to the values above, generalized linear models may also return:
# 
# null.deviance: The deviance of the null model (the model with only an intercept).

# df.null: Degrees of freedom of the null model.

# deviance: Residual deviance for the fitted model.

# aic: Akaike Information Criterion (for model comparison).
```

```{r}
mm1 |> doBy::plot_lm()
mm2 |> doBy::plot_lm()
mm3 |> doBy::plot_lm()
mm4 |> doBy::plot_lm()
mm5 |> doBy::plot_lm()
mm6 |> doBy::plot_lm()
```

```{r}

# Model evaluation

# first put all models into a list

ml <- list(mm1, mm2, mm3, mm4, mm5, mm6)


sapply(ml, function(x) modelr::rmse(x, dat))
```

```{r}
# setting up training data and test data ration 20/80

i <- sample(nrow(dat), size=0.8*nrow(dat))
head(i)

train <- dat[i,]
test <- dat[-i,]

#Check that the ratio is correct
nrow(dat)
nrow(train)
nrow(test)


```

```{r}
# Now retrain our models.

ml_train <- sapply(ml, function(x) update(x, data=train))
sapply(ml_train, function(x) modelr::rmse(x, train))
```

```{r}
# check our trained models up against the test set

sapply(ml_train, function(x) modelr::rmse(x, test))

```

```{r}
# Seems like model6 is the best BUT if I want to generelise and look away from SEX then I would pick model4 which is flipper length + bill depth 
```
